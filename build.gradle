group 'ch.unibas.dmi.dbis'
version '1.3.0-SNAPSHOT'

buildscript {
    ext.kotlinVersion = '1.3.61'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'idea'

mainClassName = 'ch.unibas.dmi.dbis.vrem.kotlin.VREMKt'
//mainClassName = 'ch.unibas.dmi.dbis.vrem.VREM'
applicationDefaultJvmArgs = ["-Xms2G", "-Xmx4G"]

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {

    /////// LEGACY
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.7.2'

    /////// CLI
    implementation "com.github.ajalt:clikt:2.3.0"

    /////// RESTful API
    implementation 'io.javalin:javalin:3.7.0'

    /////// FasterXML/Jackson JSON
    implementation "com.fasterxml.jackson.core:jackson-databind:2.10.+"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.+"


    ////// MongoDB
    implementation group: 'org.mongodb', name: 'mongodb-driver', version: '3.8.2'
    implementation 'org.litote.kmongo:kmongo-serialization:3.11.2'

    ////// CLI PARSING
    implementation group: 'com.github.rvesse', name: 'airline', version: '2.5.0'

    ////// Log4J
    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "org.apache.logging.log4j:log4j-api:2.11.2"
    implementation "org.apache.logging.log4j:log4j-core:2.11.2"
    implementation "org.apache.logging.log4j:log4j-web:2.11.2"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"

    ///// Javax
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.2'

    ///// Kotlin
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlinVersion
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.2'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-runtime', version: '0.14.0'
}


jar {
    manifest {
        attributes "Version": "$version"
        attributes "Manifest-Version": "1.0"
        attributes 'Main-Class': "$mainClassName"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task copyResources {
    doLast {
        copy {
            from "config.json"
            into "$buildDir/libs/"
        }
    }
}

task deploy(dependsOn: [build, jar, copyResources])

idea {
    module {
        downloadJavadoc = true

        excludeDirs += file('data')
    }
}
